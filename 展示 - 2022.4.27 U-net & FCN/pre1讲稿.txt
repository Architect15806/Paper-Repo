看了两篇论文，FCN 和 U-net

FCN 要解决两个问题：
1. 如何从分类网络到分割网络
2. 如何平衡分辨率 what 和位置 where

————————————

分类网络：
前半部分通过卷积提取特征
后半部分通过全连接层综合考虑全部的像素信息
生成图像的类别

分割网络：
要生成每个像素对应的类别
在分类网络上需要进行两点改动：
    1. 去掉全连接层：
        分割网络中，一个像素的类别只与其周边像素有关，全连接对分割没有意义
    2. 进行上采样：
        实现端到端的预测，生成与原图一样尺寸的分割图

————————————

如何上采样？

有三种常用的上采样方式：双线性插值、上池化、反卷积

FCN 采样的是反卷积的方法

————————————

在这里我对比了反卷积和上池化的效果

可以看出反卷积后，原本差异不大的像素区域仍然保持为一个整体
但是上池化后，原本相似且相邻的像素有被分离为“孤岛”的趋势

据我了解，“孤岛”的出现在图像分割中是不利的，所以反卷积效果应该是优于上池化

另外，反卷积是可以进行参数训练的，其他两种不行

————————————

如何平衡分辨率 what 和位置 where ？

这个问题的产生是：
下采样有三个作用：减少运算量、避免过拟合、扩大感受野
这也同时是丢失分辨率信息来收集位置信息的过程

在上采样中，位置信息得以保留，但是分辨率信息没有恢复
这样会导致图像分割的边缘模糊，缺少细节

FCN 给出的解决方案是：
将下采样得到的 heatmap 上采样到与某次池化输出差不多大小
然后对这次池化输出进行裁剪
将上采样输出和裁剪结果直接按像素求和
得到的结果作为下一次上采样的输入

这种操作叫做 skip

————————————

skip的效果显著

“FCN-32s”中，s代表stride，也就是上采样的步幅

FCN-32s 一次性将heatmap上采样到原图尺寸，得到分割结果

FCN-16s 两次上采样，进行一次skip

FCN-8s 四次上采样，两次skip

可以看到随着skip的次数递增，分割图像的边缘越来越清晰，更接近ground truth

这也体现在数据上，Miou越来越大，说明效果越来越好

————————————

如何完成像素的分类？

在 FCN 的示例网络中，需要对图片进行21分类，它的输出通道有21个

一个通道上的像素值代表了这个像素属于某类别的可能性

这就要使每个像素在各个通道上的值之和为1

于是需要做像素级别的 softmax

然后取最大的可能性的类别作为像素的分类结果

————————————

U-net 在 FCN 的基础上进行了魔改

它把下采样归纳为收缩路径，上采样归纳为扩张路径

分别用两种基本单元拼起来

收缩 Down 单元：两次卷积，一次最大池化，通道数加倍，尺寸减半

扩张 Up 单元：反卷积，将同层的收缩路径池化的输入进行裁剪，与之拼接，两次卷积

在我观察这个网络的时候发现，输入和输出不一样大

————————————

这是由于：

U-net 是被专门提出用于医学影像分割的

医学影像普遍非常大，往往需要截取一块去分割

为了使边缘像素能更好的预测，需要额外多裁剪一块出来提供边缘的上下文信息

而输出对应的 ground truth 只需包含真正有效的部分

所以输入图像比输出大一圈

但是由于我用的数据集不是医学数据集，这一点没有在实验代码里体现

————————————

对比一下 FCN 和 U-net 的异同：

他们都是通过收缩路径，缩减尺寸，提取位置信息

生成heatmap

通过扩张路径，扩大尺寸

通过捷径 short cut 恢复分辨率信息，最后完成分割

————————————

不同之处在于它们进行特征融合的方法不同

U-net 是对收缩路径图像进行 crop 裁剪后

在通道维度上与扩张路径叠加，通道数加倍

然后通过卷积恢复通道数

————————————

FCN 是在 crop 裁剪后，直接像素对像素相加

相比之下，U-net 的运算量比 FCN 要大

在我的思考中，U-net 的这种“先通道叠加，再卷积复原”的方法

考虑到卷积运算的算法

实际上是对两个图片进行了 一个可以训练的加权求和

相当于是赋予了 FCN 的 skip 操作以可以训练的加权参数

也是变相加深了网络吧

————————————

另外，U-net 中有四次特征融合，而 FCN 只有两次

这会使得 U-net 的像素在具有大感受野的同时可以进行更多尺度上的分割

————————————

左边是我跑的 U-net的结果，右边是我复现的 FCN-8s 的结果

从 dice 和 training loss 上面看都是不错的

————————————

这是我挑了一组数据的分割结果

这组数据不在训练集内

可以看到 FCN 和 U-net 各有各的问题

（点）

U-net 出现了一些把背景标为车的问题，FCN 这方面比较强

FCN 的分割边界比较崎岖，而 U-net 的边界就相对整齐规则一点

这可能是 FCN 特征融合不到位，导致分辨率不足的结果吧








